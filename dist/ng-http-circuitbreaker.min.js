(function(){"use strict";function a(){var a={circuits:[]};this.circuit=function(b){if(!b)throw{source:"ngHttpCircuitBreakerConfig",message:"Circuit Config required"};if(!b.endPointRegEx)throw{source:"ngHttpCircuitBreakerConfig",message:"Circuit Endpoint Regular Expression required"};if(!b.endPointRegEx.test)throw{source:"ngHttpCircuitBreakerConfig",message:"Circuit Parameter endPointRegEx must be a regular expression"};for(var d=0;d<a.circuits.length;d++)if(a.circuits[d].endPointRegEx.toString().toUpperCase()===b.endPointRegEx.toString().toUpperCase())throw{source:"ngHttpCircuitBreakerConfig",message:"Duplicate endpoint regular expression found"};if(isNaN(b.failureLimit)&&(b.failureLimit=5),b.failureLimit<=0)throw{source:"ngHttpCircuitBreakerConfig",message:"Invalid failure limit - must be positive, non-zero value"};if(isNaN(b.responseSLA)&&(b.responseSLA=500),b.responseSLA<0)throw{source:"ngHttpCircuitBreakerConfig",message:"Invalid Response SLA - must be non-negative. Set to 0 if you do not want a response sla to be set."};if(isNaN(b.timeUntilHalfOpen)&&(b.timeUntilHalfOpen=5e3),b.timeUntilHalfOpen<=0)throw{source:"ngHttpCircuitBreakerConfig",message:"Invalid Circuit timeUntilHalfOpen - must be a positive non-zero integer value"};if(b.statusCodesToIgnore||(b.statusCodesToIgnore=[401,403,409]),!Array.isArray(b.statusCodesToIgnore))throw{source:"ngHttpCircuitBreakerConfig",message:"Invalid statusCodesToIgnore - expecting array of integer values representing HTTP response codes"};return a.circuits.push({endPointRegEx:b.endPointRegEx,failureLimit:b.failureLimit,responseSLA:b.responseSLA,timeUntilHalfOpen:b.timeUntilHalfOpen,statusCodesToIgnore:b.statusCodesToIgnore,STATE:c,failureCount:0}),this},this.$get=function(){return a}}var b=angular.module("ng-http-circuitbreaker",[]),c=0,d=1,e=2;b.provider("ngHttpCircuitBreakerConfig",a),b.factory("ngHttpCircuitBreaker",["ngHttpCircuitBreakerConfig","$q","$timeout",function(a,b,f){return{request:function(f){for(var g=0;g<a.circuits.length;g++)if(a.circuits[g].endPointRegEx.test(f.url)){var h=a.circuits[g];if(f.cktbkr={circuit:g},h.STATE===c||h.STATE===d){a.circuits[g].responseSLA>0&&(f.timeout=a.circuits[g].responseSLA),h.STATE===d&&(h.STATE=e);break}if(h.STATE===e)return b.reject(f)}return f||b.when(f)},response:function(d){if(d.config.cktbkr){var f=a.circuits[d.config.cktbkr.circuit];f.STATE===e?(f.STATE=c,f.failureCount=0):f.failureCount>0&&(f.failureCount-=1)}return d||b.when(d)},responseError:function(c){if(c.config&&c.config.cktbkr){for(var g=a.circuits[c.config.cktbkr.circuit],h=0;h<g.statusCodesToIgnore.length;h++)if(c.status===g.statusCodesToIgnore[h])return b.reject(c);g.failureCount+=1,g.failureCount>=g.failureLimit&&(g.STATE=e,f(function(){g.STATE=d},g.timeUntilHalfOpen))}return b.reject(c)}}}])}).call(this);